digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{AUD_IDevice\n||+ ~AUD_IDevice()\l+ getSpecs()\l+ play()\l+ play()\l+ stopAll()\l+ lock()\l+ unlock()\l+ getVolume()\l+ setVolume()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{AUD_NULLDevice\n||+ AUD_NULLDevice()\l+ ~AUD_NULLDevice()\l+ getSpecs()\l+ play()\l+ play()\l+ stopAll()\l+ lock()\l+ unlock()\l+ getVolume()\l+ setVolume()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d47/classAUD__NULLDevice.html"];
  Node1 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{AUD_OpenALDevice\n|- m_device\l- m_context\l- m_specs\l- m_useMC\l- m_playingSounds\l- m_pausedSounds\l- m_mutex\l- m_thread\l- m_playing\l- m_buffersize\l- m_buffer\l- m_orientation\l|+ AUD_OpenALDevice()\l+ updateStreams()\l+ ~AUD_OpenALDevice()\l+ getSpecs()\l+ play()\l+ play()\l+ stopAll()\l+ lock()\l+ unlock()\l+ getVolume()\l+ setVolume()\l+ getListenerLocation()\l+ setListenerLocation()\l+ getListenerVelocity()\l+ setListenerVelocity()\l+ getListenerOrientation()\l+ setListenerOrientation()\l+ getSpeedOfSound()\l+ setSpeedOfSound()\l+ getDopplerFactor()\l+ setDopplerFactor()\l+ getDistanceModel()\l+ setDistanceModel()\l- start()\l- getFormat()\l- AUD_OpenALDevice()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d49/classAUD__OpenALDevice.html"];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{AUD_SoftwareDevice\n|# m_specs\l# m_mixer\l# m_quality\l- m_buffer\l- m_playingSounds\l- m_pausedSounds\l- m_playback\l- m_mutex\l- m_volume\l- m_location\l- m_velocity\l- m_orientation\l- m_speed_of_sound\l- m_doppler_factor\l- m_distance_model\l- m_flags\l|+ setQuality()\l+ getSpecs()\l+ play()\l+ play()\l+ stopAll()\l+ lock()\l+ unlock()\l+ getVolume()\l+ setVolume()\l+ getListenerLocation()\l+ setListenerLocation()\l+ getListenerVelocity()\l+ setListenerVelocity()\l+ getListenerOrientation()\l+ setListenerOrientation()\l+ getSpeedOfSound()\l+ setSpeedOfSound()\l+ getDopplerFactor()\l+ setDopplerFactor()\l+ getDistanceModel()\l+ setDistanceModel()\l+ setPanning()\l# create()\l# destroy()\l# mix()\l# playing()\l# setSpecs()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dcc/classAUD__SoftwareDevice.html"];
  Node4 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{AUD_JackDevice\n|- m_ports\l- m_client\l- m_buffer\l- m_deinterleavebuf\l- m_ringbuffers\l- m_valid\l- m_nextState\l- m_state\l- m_sync\l- m_syncFunc\l- m_syncFuncData\l- m_mixingThread\l- m_mixingLock\l- m_mixingCondition\l|+ AUD_JackDevice()\l+ ~AUD_JackDevice()\l+ startPlayback()\l+ stopPlayback()\l+ seekPlayback()\l+ setSyncCallback()\l+ getPlaybackPosition()\l+ doesPlayback()\l# playing()\l- updateRingBuffers()\l- AUD_JackDevice()\l- operator=()\l- jack_shutdown()\l- jack_mix()\l- jack_sync()\l- runMixingThread()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d29/classAUD__JackDevice.html"];
  Node4 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{AUD_ReadDevice\n|- m_playing\l|+ AUD_ReadDevice()\l+ AUD_ReadDevice()\l+ ~AUD_ReadDevice()\l+ read()\l+ changeSpecs()\l# playing()\l- AUD_ReadDevice()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d06/classAUD__ReadDevice.html"];
  Node4 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{AUD_SDLDevice\n||+ AUD_SDLDevice()\l+ ~AUD_SDLDevice()\l# playing()\l- AUD_SDLDevice()\l- operator=()\l- SDL_mix()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dd4/classAUD__SDLDevice.html"];
}
