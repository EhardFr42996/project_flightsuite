digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{btPolyhedralConvexShape\n||+ btPolyhedralConvexShape()\l+ localGetSupportingVertexWithoutMargin()\l+ batchedUnitVectorGetSupportingVertexWithoutMargin()\l+ calculateLocalInertia()\l+ getNumVertices()\l+ getNumEdges()\l+ getEdge()\l+ getVertex()\l+ getNumPlanes()\l+ getPlane()\l+ isInside()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{btConvexInternalShape\n|# m_localScaling\l# m_implicitShapeDimensions\l# m_collisionMargin\l# m_padding\l|+ ~btConvexInternalShape()\l+ localGetSupportingVertex()\l+ getImplicitShapeDimensions()\l+ setImplicitShapeDimensions()\l+ getAabb()\l+ getAabbSlow()\l+ setLocalScaling()\l+ getLocalScaling()\l+ getLocalScalingNV()\l+ setMargin()\l+ getMargin()\l+ getMarginNV()\l+ getNumPreferredPenetrationDirections()\l+ getPreferredPenetrationDirection()\l+ calculateSerializeBufferSize()\l+ serialize()\l# btConvexInternalShape()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d1a/classbtConvexInternalShape.html",tooltip="The btConvexInternalShape is an internal base class, shared by most convex shape implementations."];
  Node1 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{btBox2dShape\n|- m_centroid\l- m_vertices\l- m_normals\l|+ getHalfExtentsWithMargin()\l+ getHalfExtentsWithoutMargin()\l+ localGetSupportingVertex()\l+ localGetSupportingVertexWithoutMargin()\l+ batchedUnitVectorGetSupportingVertexWithoutMargin()\l+ btBox2dShape()\l+ setMargin()\l+ setLocalScaling()\l+ getAabb()\l+ calculateLocalInertia()\l+ getVertexCount()\l+ getNumVertices()\l+ getVertices()\l+ getNormals()\l+ getPlane()\l+ getCentroid()\l+ getNumPlanes()\l+ getNumEdges()\l+ getVertex()\l+ getPlaneEquation()\l+ getEdge()\l+ isInside()\l+ getName()\l+ getNumPreferredPenetrationDirections()\l+ getPreferredPenetrationDirection()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dc3/classbtBox2dShape.html",tooltip="The btBox2dShape is a box primitive around the origin, its sides axis aligned with length specified b..."];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{btBoxShape\n||+ getHalfExtentsWithMargin()\l+ getHalfExtentsWithoutMargin()\l+ localGetSupportingVertex()\l+ localGetSupportingVertexWithoutMargin()\l+ batchedUnitVectorGetSupportingVertexWithoutMargin()\l+ btBoxShape()\l+ setMargin()\l+ setLocalScaling()\l+ getAabb()\l+ calculateLocalInertia()\l+ getPlane()\l+ getNumPlanes()\l+ getNumVertices()\l+ getNumEdges()\l+ getVertex()\l+ getPlaneEquation()\l+ getEdge()\l+ isInside()\l+ getName()\l+ getNumPreferredPenetrationDirections()\l+ getPreferredPenetrationDirection()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df8/classbtBoxShape.html",tooltip="The btBoxShape is a box primitive around the origin, its sides axis aligned with length specified by ..."];
  Node1 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{btPolyhedralConvexAabbCachingShape\n|- m_localAabbMin\l- m_localAabbMax\l- m_isLocalAabbValid\l|+ btPolyhedralConvexAabbCachingShape()\l+ getNonvirtualAabb()\l+ setLocalScaling()\l+ getAabb()\l+ recalcLocalAabb()\l# setCachedLocalAabb()\l# getCachedLocalAabb()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/dd1/classbtPolyhedralConvexAabbCachingShape.html",tooltip="The btPolyhedralConvexAabbCachingShape adds aabb caching to the btPolyhedralConvexShape."];
  Node5 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{btBU_Simplex1to4\n|# m_numVertices\l# m_vertices\l|+ btBU_Simplex1to4()\l+ btBU_Simplex1to4()\l+ btBU_Simplex1to4()\l+ btBU_Simplex1to4()\l+ btBU_Simplex1to4()\l+ reset()\l+ getAabb()\l+ addVertex()\l+ getNumVertices()\l+ getNumEdges()\l+ getEdge()\l+ getVertex()\l+ getNumPlanes()\l+ getPlane()\l+ getIndex()\l+ isInside()\l+ getName()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d81/classbtBU__Simplex1to4.html",tooltip="The btBU_Simplex1to4 implements tetrahedron, triangle, line, vertex collision shapes. In most cases it is better to use btConvexHullShape instead."];
  Node6 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{btTetrahedronShapeEx\n||+ btTetrahedronShapeEx()\l+ setVertices()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/db5/classbtTetrahedronShapeEx.html",tooltip="Helper class for tetrahedrons."];
  Node5 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{btConvexTriangleMeshShape\n|- m_stridingMesh\l|+ btConvexTriangleMeshShape()\l+ getMeshInterface()\l+ getMeshInterface()\l+ localGetSupportingVertex()\l+ localGetSupportingVertexWithoutMargin()\l+ batchedUnitVectorGetSupportingVertexWithoutMargin()\l+ getName()\l+ getNumVertices()\l+ getNumEdges()\l+ getEdge()\l+ getVertex()\l+ getNumPlanes()\l+ getPlane()\l+ isInside()\l+ setLocalScaling()\l+ getLocalScaling()\l+ calculatePrincipalAxisTransform()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d09/classbtConvexTriangleMeshShape.html"];
}
