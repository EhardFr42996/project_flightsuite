digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{btTypedObject\n|+ m_objectType\l|+ btTypedObject()\l+ getObjectType()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{btTypedConstraint\n|+ m_userConstraintId\l+ m_userConstraintPtr\l# m_rbA\l# m_rbB\l# m_appliedImpulse\l# m_dbgDrawSize\l- m_userConstraintType\l- @262\l- m_needsFeedback\l|+ ~btTypedConstraint()\l+ btTypedConstraint()\l+ btTypedConstraint()\l+ buildJacobian()\l+ setupSolverConstraint()\l+ getInfo1()\l+ getInfo2()\l+ internalSetAppliedImpulse()\l+ internalGetAppliedImpulse()\l+ solveConstraintObsolete()\l+ getRigidBodyA()\l+ getRigidBodyB()\l+ getRigidBodyA()\l+ getRigidBodyB()\l+ getUserConstraintType()\l+ setUserConstraintType()\l+ setUserConstraintId()\l+ getUserConstraintId()\l+ setUserConstraintPtr()\l+ getUserConstraintPtr()\l+ getUid()\l+ needsFeedback()\l+ enableFeedback()\l+ getAppliedImpulse()\l+ getConstraintType()\l+ setDbgDrawSize()\l+ getDbgDrawSize()\l+ setParam()\l+ getParam()\l+ calculateSerializeBufferSize()\l+ serialize()\l# getMotorFactor()\l# getFixedBody()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/daa/classbtTypedConstraint.html",tooltip="TypedConstraint is the baseclass for Bullet constraints and vehicles."];
  Node2 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{btConeTwistConstraint\n|- m_jac\l- m_rbAFrame\l- m_rbBFrame\l- m_limitSoftness\l- m_biasFactor\l- m_relaxationFactor\l- m_damping\l- m_swingSpan1\l- m_swingSpan2\l- m_twistSpan\l- m_fixThresh\l- m_swingAxis\l- m_twistAxis\l- m_kSwing\l- m_kTwist\l- m_twistLimitSign\l- m_swingCorrection\l- m_twistCorrection\l- m_twistAngle\l- m_accSwingLimitImpulse\l- m_accTwistLimitImpulse\l- m_angularOnly\l- m_solveTwistLimit\l- m_solveSwingLimit\l- m_useSolveConstraintObsolete\l- m_swingLimitRatio\l- m_twistLimitRatio\l- m_twistAxisA\l- m_bMotorEnabled\l- m_bNormalizedMotorStrength\l- m_qTarget\l- m_maxMotorImpulse\l- m_accMotorImpulse\l- m_flags\l- m_linCFM\l- m_linERP\l- m_angCFM\l|+ btConeTwistConstraint()\l+ btConeTwistConstraint()\l+ buildJacobian()\l+ getInfo1()\l+ getInfo1NonVirtual()\l+ getInfo2()\l+ getInfo2NonVirtual()\l+ solveConstraintObsolete()\l+ updateRHS()\l+ getRigidBodyA()\l+ getRigidBodyB()\l+ setAngularOnly()\l+ setLimit()\l+ setLimit()\l+ getAFrame()\l+ getBFrame()\l+ getSolveTwistLimit()\l+ getSolveSwingLimit()\l+ getTwistLimitSign()\l+ calcAngleInfo()\l+ calcAngleInfo2()\l+ getSwingSpan1()\l+ getSwingSpan2()\l+ getTwistSpan()\l+ getTwistAngle()\l+ isPastSwingLimit()\l+ setDamping()\l+ enableMotor()\l+ setMaxMotorImpulse()\l+ setMaxMotorImpulseNormalized()\l+ getFixThresh()\l+ setFixThresh()\l+ setMotorTarget()\l+ setMotorTargetInConstraintSpace()\l+ GetPointForAngle()\l+ setParam()\l+ setFrames()\l+ getFrameOffsetA()\l+ getFrameOffsetB()\l+ getParam()\l+ calculateSerializeBufferSize()\l+ serialize()\l# init()\l# computeConeLimitInfo()\l# computeTwistLimitInfo()\l# adjustSwingAxisToUseEllipseNormal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d4d/classbtConeTwistConstraint.html",tooltip="btConeTwistConstraint can be used to simulate ragdoll joints (upper arm, leg etc)"];
  Node2 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{btGeneric6DofConstraint\n|+ m_useSolveConstraintObsolete\l# m_frameInA\l# m_frameInB\l# m_jacLinear\l# m_jacAng\l# m_linearLimits\l# m_angularLimits\l# m_timeStep\l# m_calculatedTransformA\l# m_calculatedTransformB\l# m_calculatedAxisAngleDiff\l# m_calculatedAxis\l# m_calculatedLinearDiff\l# m_factA\l# m_factB\l# m_hasStaticBody\l# m_AnchorPos\l# m_useLinearReferenceFrameA\l# m_useOffsetForConstraintFrame\l# m_flags\l|+ btGeneric6DofConstraint()\l+ btGeneric6DofConstraint()\l+ calculateTransforms()\l+ calculateTransforms()\l+ getCalculatedTransformA()\l+ getCalculatedTransformB()\l+ getFrameOffsetA()\l+ getFrameOffsetB()\l+ getFrameOffsetA()\l+ getFrameOffsetB()\l+ buildJacobian()\l+ getInfo1()\l+ getInfo1NonVirtual()\l+ getInfo2()\l+ getInfo2NonVirtual()\l+ updateRHS()\l+ getAxis()\l+ getAngle()\l+ getRelativePivotPosition()\l+ setFrames()\l+ testAngularLimitMotor()\l+ setLinearLowerLimit()\l+ getLinearLowerLimit()\l+ setLinearUpperLimit()\l+ getLinearUpperLimit()\l+ setAngularLowerLimit()\l+ getAngularLowerLimit()\l+ setAngularUpperLimit()\l+ getAngularUpperLimit()\l+ getRotationalLimitMotor()\l+ getTranslationalLimitMotor()\l+ setLimit()\l+ isLimited()\l+ calcAnchorPos()\l+ get_limit_motor_info2()\l+ getUseFrameOffset()\l+ setUseFrameOffset()\l+ setParam()\l+ getParam()\l+ setAxis()\l+ calculateSerializeBufferSize()\l+ serialize()\l# operator=()\l# setAngularLimits()\l# setLinearLimits()\l# buildLinearJacobian()\l# buildAngularJacobian()\l# calculateLinearInfo()\l# calculateAngleInfo()\l* m_frameInA\l* m_frameInB\l* m_jacLinear\l* m_jacAng\l* m_linearLimits\l* m_angularLimits\l* m_timeStep\l* m_calculatedTransformA\l* m_calculatedTransformB\l* m_calculatedAxisAngleDiff\l* m_calculatedAxis\l* m_calculatedLinearDiff\l* m_factA\l* m_factB\l* m_hasStaticBody\l* m_AnchorPos\l* m_useLinearReferenceFrameA\l* m_useOffsetForConstraintFrame\l* m_flags\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/dd6/classbtGeneric6DofConstraint.html",tooltip="btGeneric6DofConstraint between two rigidbodies each with a pivotpoint that descibes the axis locatio..."];
  Node4 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{btGeneric6DofSpringConstraint\n|# m_springEnabled\l# m_equilibriumPoint\l# m_springStiffness\l# m_springDamping\l|+ btGeneric6DofSpringConstraint()\l+ enableSpring()\l+ setStiffness()\l+ setDamping()\l+ setEquilibriumPoint()\l+ setEquilibriumPoint()\l+ setEquilibriumPoint()\l+ setAxis()\l+ getInfo2()\l+ calculateSerializeBufferSize()\l+ serialize()\l# internalUpdateSprings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d7b/classbtGeneric6DofSpringConstraint.html",tooltip="Generic 6 DOF constraint that allows to set spring motors to any translational and rotational DOF..."];
  Node5 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{btHinge2Constraint\n|# m_anchor\l# m_axis1\l# m_axis2\l|+ btHinge2Constraint()\l+ getAnchor()\l+ getAnchor2()\l+ getAxis1()\l+ getAxis2()\l+ getAngle1()\l+ getAngle2()\l+ setUpperLimit()\l+ setLowerLimit()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d4f/classbtHinge2Constraint.html"];
  Node4 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{btUniversalConstraint\n|# m_anchor\l# m_axis1\l# m_axis2\l|+ btUniversalConstraint()\l+ getAnchor()\l+ getAnchor2()\l+ getAxis1()\l+ getAxis2()\l+ getAngle1()\l+ getAngle2()\l+ setUpperLimit()\l+ setLowerLimit()\l+ setAxis()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d13/classbtUniversalConstraint.html"];
  Node2 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{btSliderConstraint\n|# m_useSolveConstraintObsolete\l# m_useOffsetForConstraintFrame\l# m_frameInA\l# m_frameInB\l# m_useLinearReferenceFrameA\l# m_lowerLinLimit\l# m_upperLinLimit\l# m_lowerAngLimit\l# m_upperAngLimit\l# m_softnessDirLin\l# m_restitutionDirLin\l# m_dampingDirLin\l# m_cfmDirLin\l# m_softnessDirAng\l# m_restitutionDirAng\l# m_dampingDirAng\l# m_cfmDirAng\l# m_softnessLimLin\l# m_restitutionLimLin\l# m_dampingLimLin\l# m_cfmLimLin\l# m_softnessLimAng\l# m_restitutionLimAng\l# m_dampingLimAng\l# m_cfmLimAng\l# m_softnessOrthoLin\l# m_restitutionOrthoLin\l# m_dampingOrthoLin\l# m_cfmOrthoLin\l# m_softnessOrthoAng\l# m_restitutionOrthoAng\l# m_dampingOrthoAng\l# m_cfmOrthoAng\l# m_solveLinLim\l# m_solveAngLim\l# m_flags\l# m_jacLin\l# m_jacLinDiagABInv\l# m_jacAng\l# m_timeStep\l# m_calculatedTransformA\l# m_calculatedTransformB\l# m_sliderAxis\l# m_realPivotAInW\l# m_realPivotBInW\l# m_projPivotInW\l# m_delta\l# m_depth\l# m_relPosA\l# m_relPosB\l# m_linPos\l# m_angPos\l# m_angDepth\l# m_kAngle\l# m_poweredLinMotor\l# m_targetLinMotorVelocity\l# m_maxLinMotorForce\l# m_accumulatedLinMotorImpulse\l# m_poweredAngMotor\l# m_targetAngMotorVelocity\l# m_maxAngMotorForce\l# m_accumulatedAngMotorImpulse\l|+ btSliderConstraint()\l+ btSliderConstraint()\l+ getInfo1()\l+ getInfo1NonVirtual()\l+ getInfo2()\l+ getInfo2NonVirtual()\l+ getRigidBodyA()\l+ getRigidBodyB()\l+ getCalculatedTransformA()\l+ getCalculatedTransformB()\l+ getFrameOffsetA()\l+ getFrameOffsetB()\l+ getFrameOffsetA()\l+ getFrameOffsetB()\l+ getLowerLinLimit()\l+ setLowerLinLimit()\l+ getUpperLinLimit()\l+ setUpperLinLimit()\l+ getLowerAngLimit()\l+ setLowerAngLimit()\l+ getUpperAngLimit()\l+ setUpperAngLimit()\l+ getUseLinearReferenceFrameA()\l+ getSoftnessDirLin()\l+ getRestitutionDirLin()\l+ getDampingDirLin()\l+ getSoftnessDirAng()\l+ getRestitutionDirAng()\l+ getDampingDirAng()\l+ getSoftnessLimLin()\l+ getRestitutionLimLin()\l+ getDampingLimLin()\l+ getSoftnessLimAng()\l+ getRestitutionLimAng()\l+ getDampingLimAng()\l+ getSoftnessOrthoLin()\l+ getRestitutionOrthoLin()\l+ getDampingOrthoLin()\l+ getSoftnessOrthoAng()\l+ getRestitutionOrthoAng()\l+ getDampingOrthoAng()\l+ setSoftnessDirLin()\l+ setRestitutionDirLin()\l+ setDampingDirLin()\l+ setSoftnessDirAng()\l+ setRestitutionDirAng()\l+ setDampingDirAng()\l+ setSoftnessLimLin()\l+ setRestitutionLimLin()\l+ setDampingLimLin()\l+ setSoftnessLimAng()\l+ setRestitutionLimAng()\l+ setDampingLimAng()\l+ setSoftnessOrthoLin()\l+ setRestitutionOrthoLin()\l+ setDampingOrthoLin()\l+ setSoftnessOrthoAng()\l+ setRestitutionOrthoAng()\l+ setDampingOrthoAng()\l+ setPoweredLinMotor()\l+ getPoweredLinMotor()\l+ setTargetLinMotorVelocity()\l+ getTargetLinMotorVelocity()\l+ setMaxLinMotorForce()\l+ getMaxLinMotorForce()\l+ setPoweredAngMotor()\l+ getPoweredAngMotor()\l+ setTargetAngMotorVelocity()\l+ getTargetAngMotorVelocity()\l+ setMaxAngMotorForce()\l+ getMaxAngMotorForce()\l+ getLinearPos()\l+ getSolveLinLimit()\l+ getLinDepth()\l+ getSolveAngLimit()\l+ getAngDepth()\l+ calculateTransforms()\l+ testLinLimits()\l+ testAngLimits()\l+ getAncorInA()\l+ getAncorInB()\l+ getUseFrameOffset()\l+ setUseFrameOffset()\l+ setFrames()\l+ setParam()\l+ getParam()\l+ calculateSerializeBufferSize()\l+ serialize()\l# initParams()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc6/classbtSliderConstraint.html"];
}
