digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{btHeightfieldTerrainShape\n|+ m_heightfieldDataUnsignedChar\l+ m_heightfieldDataShort\l+ m_heightfieldDataFloat\l+ m_heightfieldDataUnknown\l# m_localAabbMin\l# m_localAabbMax\l# m_localOrigin\l# m_heightStickWidth\l# m_heightStickLength\l# m_minHeight\l# m_maxHeight\l# m_width\l# m_length\l# m_heightScale\l# @260\l# m_heightDataType\l# m_flipQuadEdges\l# m_useDiamondSubdivision\l# m_upAxis\l# m_localScaling\l|+ btHeightfieldTerrainShape()\l+ btHeightfieldTerrainShape()\l+ ~btHeightfieldTerrainShape()\l+ setUseDiamondSubdivision()\l+ getAabb()\l+ processAllTriangles()\l+ calculateLocalInertia()\l+ setLocalScaling()\l+ getLocalScaling()\l+ getName()\l# getRawHeightFieldValue()\l# quantizeWithClamp()\l# getVertex()\l# initialize()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{btConcaveShape\n|# m_collisionMargin\l|+ btConcaveShape()\l+ ~btConcaveShape()\l+ processAllTriangles()\l+ getMargin()\l+ setMargin()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/da0/classbtConcaveShape.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{btCollisionShape\n|# m_shapeType\l# m_userPointer\l|+ btCollisionShape()\l+ ~btCollisionShape()\l+ getAabb()\l+ getBoundingSphere()\l+ getAngularMotionDisc()\l+ getContactBreakingThreshold()\l+ calculateTemporalAabb()\l+ isPolyhedral()\l+ isConvex2d()\l+ isConvex()\l+ isNonMoving()\l+ isConcave()\l+ isCompound()\l+ isSoftBody()\l+ isInfinite()\l+ setLocalScaling()\l+ getLocalScaling()\l+ calculateLocalInertia()\l+ getName()\l+ getShapeType()\l+ setMargin()\l+ getMargin()\l+ setUserPointer()\l+ getUserPointer()\l+ calculateSerializeBufferSize()\l+ serialize()\l+ serializeSingleShape()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd7/classbtCollisionShape.html",tooltip="The btCollisionShape class provides an interface for collision shapes that can be shared among btColl..."];
}
