digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{btTriangleCallback\n||+ ~btTriangleCallback()\l+ processTriangle()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{btConnectivityProcessor\n|+ m_partIdA\l+ m_triangleIndexA\l+ m_triangleVerticesA\l+ m_triangleInfoMap\l|+ processTriangle()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d6f/structbtConnectivityProcessor.html"];
  Node1 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{btConvexTriangleCallback\n|+ m_triangleCount\l+ m_manifoldPtr\l- m_convexBody\l- m_triBody\l- m_aabbMin\l- m_aabbMax\l- m_resultOut\l- m_dispatcher\l- m_dispatchInfoPtr\l- m_collisionMarginTriangle\l|+ btConvexTriangleCallback()\l+ setTimeStepAndCounters()\l+ ~btConvexTriangleCallback()\l+ processTriangle()\l+ clearCache()\l+ getAabbMin()\l+ getAabbMax()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d8d/classbtConvexTriangleCallback.html",tooltip="For each triangle in the concave mesh that overlaps with the AABB of a convex (m_convexProxy), processTriangle is called."];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{btGImpactTriangleCallback\n|+ algorithm\l+ body0\l+ body1\l+ gimpactshape0\l+ swapped\l+ margin\l|+ processTriangle()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d16/classbtGImpactTriangleCallback.html"];
  Node1 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{btScaledTriangleCallback\n|- m_originalCallback\l- m_localScaling\l|+ btScaledTriangleCallback()\l+ processTriangle()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d71/classbtScaledTriangleCallback.html"];
  Node1 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{btSoftBodyTriangleCallback\n|+ m_triangleCount\l- m_softBody\l- m_triBody\l- m_aabbMin\l- m_aabbMax\l- m_resultOut\l- m_dispatcher\l- m_dispatchInfoPtr\l- m_collisionMarginTriangle\l- m_shapeCache\l|+ btSoftBodyTriangleCallback()\l+ setTimeStepAndCounters()\l+ ~btSoftBodyTriangleCallback()\l+ processTriangle()\l+ clearCache()\l+ getAabbMin()\l+ getAabbMax()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/db6/classbtSoftBodyTriangleCallback.html",tooltip="For each triangle in the concave mesh that overlaps with the AABB of a soft body (m_softBody), processTriangle is called."];
  Node1 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{btTriangleBuffer\n|- m_triangleBuffer\l|+ processTriangle()\l+ getNumTriangles()\l+ getTriangle()\l+ clearBuffer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d67/classbtTriangleBuffer.html"];
  Node1 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{btTriangleConvexcastCallback\n|+ m_convexShape\l+ m_convexShapeFrom\l+ m_convexShapeTo\l+ m_triangleToWorld\l+ m_hitFraction\l+ m_triangleCollisionMargin\l+ m_allowedPenetration\l|+ btTriangleConvexcastCallback()\l+ processTriangle()\l+ reportHit()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d39/classbtTriangleConvexcastCallback.html"];
  Node1 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 [label="{btTriangleRaycastCallback\n|+ m_from\l+ m_to\l+ m_flags\l+ m_hitFraction\l|+ btTriangleRaycastCallback()\l+ processTriangle()\l+ reportHit()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d39/classbtTriangleRaycastCallback.html"];
  Node1 -> Node10 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 [label="{DebugDrawcallback\n|- m_debugDrawer\l- m_color\l- m_worldTrans\l|+ DebugDrawcallback()\l+ internalProcessTriangleIndex()\l+ processTriangle()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d8e/classDebugDrawcallback.html"];
  Node1 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 [label="{SupportVertexCallback\n|+ m_worldTrans\l+ m_maxDot\l+ m_supportVecLocal\l- m_supportVertexLocal\l|+ SupportVertexCallback()\l+ processTriangle()\l+ GetSupportVertexWorldSpace()\l+ GetSupportVertexLocal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6b/classSupportVertexCallback.html"];
}
