digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{KX_BulletPhysicsController\n|- m_savedCollisionFlags\l- m_savedActivationState\l- m_savedCollisionFilterGroup\l- m_savedCollisionFilterMask\l- m_savedMass\l- m_savedDyna\l- m_suspended\l- m_bulletChildShape\l|+ applyImpulse()\l+ SetObject()\l+ setMargin()\l+ RelativeTranslate()\l+ RelativeRotate()\l+ ApplyTorque()\l+ ApplyForce()\l+ GetLinearVelocity()\l+ GetAngularVelocity()\l+ GetVelocity()\l+ SetAngularVelocity()\l+ SetLinearVelocity()\l+ getOrientation()\l+ setOrientation()\l+ setPosition()\l+ setScaling()\l+ SetTransform()\l+ GetMass()\l+ SetMass()\l+ GetLocalInertia()\l+ getReactionForce()\l+ setRigidBody()\l+ AddCompoundChild()\l+ RemoveCompoundChild()\l+ resolveCombinedVelocities()\l+ SuspendDynamics()\l+ RestoreDynamics()\l+ GetReplica()\l+ GetRadius()\l+ GetLinVelocityMin()\l+ SetLinVelocityMin()\l+ GetLinVelocityMax()\l+ SetLinVelocityMax()\l+ SetSumoTransform()\l+ SetSimulatedTime()\l+ Update()\l+ GetUserData()\l+ getName()\l+ SetOption()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{KX_IPhysicsController\n|# m_bDyna\l# m_bSensor\l# m_bCompound\l# m_suspendDynamics\l# m_userdata\l|+ KX_IPhysicsController()\l+ ~KX_IPhysicsController()\l+ applyImpulse()\l+ SetObject()\l+ setMargin()\l+ RelativeTranslate()\l+ RelativeRotate()\l+ ApplyTorque()\l+ ApplyForce()\l+ GetLinearVelocity()\l+ GetAngularVelocity()\l+ GetVelocity()\l+ SetAngularVelocity()\l+ SetLinearVelocity()\l+ resolveCombinedVelocities()\l+ getOrientation()\l+ setOrientation()\l+ SetTransform()\l+ setPosition()\l+ setScaling()\l+ GetMass()\l+ SetMass()\l+ GetLinVelocityMin()\l+ SetLinVelocityMin()\l+ GetLinVelocityMax()\l+ SetLinVelocityMax()\l+ GetLocalInertia()\l+ getReactionForce()\l+ setRigidBody()\l+ AddCompoundChild()\l+ RemoveCompoundChild()\l+ SuspendDynamics()\l+ RestoreDynamics()\l+ GetReplica()\l+ SetDyna()\l+ SetSensor()\l+ IsDyna()\l+ IsSensor()\l+ IsCompound()\l+ GetRadius()\l+ SetSumoTransform()\l+ SetSimulatedTime()\l+ Update()\l+ GetUserData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/dfc/classKX__IPhysicsController.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{SG_Controller\n|# m_pObject\l|+ SG_Controller()\l+ ~SG_Controller()\l+ Update()\l+ SetObject()\l+ ClearObject()\l+ SetSimulatedTime()\l+ GetReplica()\l+ SetOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d9e/classSG__Controller.html"];
  Node4 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{CcdPhysicsController\n|+ m_collisionDelay\l# m_object\l# m_MotionState\l# m_bulletMotionState\l# m_collisionShape\l# m_shapeInfo\l# m_softbodyMappingDone\l# m_softBodyTransformInitialized\l# m_prototypeTransformInitialized\l# m_softbodyStartTrans\l# m_newClientInfo\l# m_registerCount\l# m_cci\l# m_parentCtrl\l|+ CcdPhysicsController()\l+ DeleteControllerShape()\l+ ReplaceControllerShape()\l+ ~CcdPhysicsController()\l+ getConstructionInfo()\l+ getConstructionInfo()\l+ GetRigidBody()\l+ GetCollisionObject()\l+ GetSoftBody()\l+ GetShapeInfo()\l+ GetCollisionShape()\l+ SynchronizeMotionStates()\l+ WriteMotionStateToDynamics()\l+ WriteDynamicsToMotionState()\l+ PostProcessReplica()\l+ SetPhysicsEnvironment()\l+ RelativeTranslate()\l+ RelativeRotate()\l+ getOrientation()\l+ setOrientation()\l+ setPosition()\l+ getPosition()\l+ setScaling()\l+ ApplyTorque()\l+ ApplyForce()\l+ SetAngularVelocity()\l+ SetLinearVelocity()\l+ applyImpulse()\l+ SetActive()\l+ GetLinearVelocity()\l+ GetAngularVelocity()\l+ GetVelocity()\l+ getReactionForce()\l+ setRigidBody()\l+ resolveCombinedVelocities()\l+ getNewClientInfo()\l+ setNewClientInfo()\l+ GetReplica()\l+ GetCollisionFilterGroup()\l+ GetCollisionFilterMask()\l+ calcXform()\l+ SetMargin()\l+ GetMargin()\l+ GetRadius()\l+ SetRadius()\l+ SetLinVelocityMin()\l+ GetLinVelocityMin()\l+ SetLinVelocityMax()\l+ GetLinVelocityMax()\l+ wantsSleeping()\l+ UpdateDeactivation()\l+ SetCenterOfMassTransform()\l+ setAabb()\l+ GetMotionState()\l+ GetMotionState()\l+ GetPhysicsEnvironment()\l+ setParentCtrl()\l+ getParentCtrl()\l+ getParentCtrl()\l+ getName()\l+ GetTransformFromMotionState()\l# GetWorldOrientation()\l# CreateRigidbody()\l# CreateSoftbody()\l# Register()\l# Unregister()\l# setWorldOrientation()\l# forceWorldTransform()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d9d/classCcdPhysicsController.html",tooltip="CcdPhysicsController is a physics object that supports continuous collision detection and time of imp..."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{PHY_IPhysicsController\n||+ ~PHY_IPhysicsController()\l+ SynchronizeMotionStates()\l+ WriteMotionStateToDynamics()\l+ WriteDynamicsToMotionState()\l+ GetMotionState()\l+ PostProcessReplica()\l+ RelativeTranslate()\l+ RelativeRotate()\l+ getOrientation()\l+ setOrientation()\l+ setPosition()\l+ getPosition()\l+ setScaling()\l+ ApplyTorque()\l+ ApplyForce()\l+ SetAngularVelocity()\l+ SetLinearVelocity()\l+ resolveCombinedVelocities()\l+ applyImpulse()\l+ SetActive()\l+ GetLinearVelocity()\l+ GetVelocity()\l+ getReactionForce()\l+ setRigidBody()\l+ GetReplica()\l+ calcXform()\l+ SetMargin()\l+ GetMargin()\l+ GetRadius()\l+ SetRadius()\l+ GetLinVelocityMin()\l+ SetLinVelocityMin()\l+ GetLinVelocityMax()\l+ SetLinVelocityMax()\l+ GetWorldPosition()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/ddb/classPHY__IPhysicsController.html"];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{PHY_IController\n||+ ~PHY_IController()\l+ getNewClientInfo()\l+ setNewClientInfo()\l+ SetPhysicsEnvironment()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d92/classPHY__IController.html"];
}
