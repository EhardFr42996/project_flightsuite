digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{STR_HashedString\n|- m_Hashed\l- m_CachedHash\l|+ STR_HashedString()\l+ STR_HashedString()\l+ STR_HashedString()\l+ hash()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{STR_String\n|# pData\l# Len\l# Max\l|+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ STR_String()\l+ ~STR_String()\l+ Format()\l+ FormatAdd()\l+ Clear()\l+ Reverse()\l+ IsUpper()\l+ IsLower()\l+ IsEmpty()\l+ Length()\l+ SetLength()\l+ GetAt()\l+ SetAt()\l+ SetAt()\l+ SetAt()\l+ Replace()\l+ Replace()\l+ Left()\l+ Right()\l+ Mid()\l+ Compare()\l+ CompareNoCase()\l+ IsEqual()\l+ IsEqualNoCase()\l+ Find()\l+ Find()\l+ Find()\l+ RFind()\l+ FindOneOf()\l+ RFindOneOf()\l+ Explode()\l+ Upper()\l+ Lower()\l+ Capitalize()\l+ TrimLeft()\l+ TrimLeft()\l+ TrimRight()\l+ TrimRight()\l+ Trim()\l+ Trim()\l+ TrimQuotes()\l+ operator const char *()\l+ Ptr()\l+ ReadPtr()\l+ ToFloat()\l+ ToInt()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator+=()\l+ operator+=()\l+ operator+=()\l# AllocBuffer()\l# Copy()\l# Concat()\l# isLower()\l# isUpper()\l# isSpace()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dce/classSTR__String.html"];
}
