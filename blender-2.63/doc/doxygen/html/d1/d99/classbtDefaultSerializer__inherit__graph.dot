digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{btDefaultSerializer\n|- mTypes\l- mStructs\l- mTlens\l- mStructReverse\l- mTypeLookup\l- m_chunkP\l- m_nameMap\l- m_uniquePointers\l- m_uniqueIdGenerator\l- m_totalSize\l- m_buffer\l- m_currentSize\l- m_dna\l- m_dnaLength\l- m_serializationFlags\l- m_chunkPtrs\l|+ btDefaultSerializer()\l+ ~btDefaultSerializer()\l+ writeHeader()\l+ startSerialization()\l+ finishSerialization()\l+ getUniquePointer()\l+ getBufferPointer()\l+ getCurrentBufferSize()\l+ finalizeChunk()\l+ internalAlloc()\l+ allocate()\l+ findNameForPointer()\l+ registerNameForPointer()\l+ serializeName()\l+ getSerializationFlags()\l+ setSerializationFlags()\l# findPointer()\l# writeDNA()\l# getReverseType()\l# initDNA()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{btSerializer\n||+ ~btSerializer()\l+ getBufferPointer()\l+ getCurrentBufferSize()\l+ allocate()\l+ finalizeChunk()\l+ findPointer()\l+ getUniquePointer()\l+ startSerialization()\l+ finishSerialization()\l+ findNameForPointer()\l+ registerNameForPointer()\l+ serializeName()\l+ getSerializationFlags()\l+ setSerializationFlags()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d43/classbtSerializer.html"];
}
