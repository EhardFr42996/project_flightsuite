digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{CTR_UHeap\< HeapType \>\n|- m_vector\l|+ MakeHeap()\l+ Insert()\l+ HeapVector()\l+ Remove()\l+ Top()\l+ SC_Heap()\l+ ~CTR_UHeap()\l+ New()\l- CTR_UHeap()\l- Swap()\l- Parent()\l- Left()\l- Right()\l- HeapVal()\l- DownHeap()\l- UpHeap()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{MEM_NonCopyable\n||# MEM_NonCopyable()\l- MEM_NonCopyable()\l- MEM_NonCopyable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d40/classMEM__NonCopyable.html"];
  Node1 -> Node3 [dir=back,color="orange",fontsize="10",style="dashed",label="\< LOD_Edge \>",fontname="Helvetica"];
  Node3 [label="{CTR_UHeap\< LOD_Edge \>\n|- m_vector\l|+ MakeHeap()\l+ Insert()\l+ HeapVector()\l+ Remove()\l+ Top()\l+ SC_Heap()\l+ ~CTR_UHeap()\l+ New()\l- CTR_UHeap()\l- Swap()\l- Parent()\l- Left()\l- Right()\l- HeapVal()\l- DownHeap()\l- UpHeap()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dd1/classCTR__UHeap.html"];
}
