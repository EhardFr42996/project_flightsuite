digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{btGImpactMeshShapePart\n|# m_primitive_manager\l|+ btGImpactMeshShapePart()\l+ btGImpactMeshShapePart()\l+ ~btGImpactMeshShapePart()\l+ childrenHasTransform()\l+ lockChildShapes()\l+ unlockChildShapes()\l+ getNumChildShapes()\l+ getChildShape()\l+ getChildShape()\l+ getChildTransform()\l+ setChildTransform()\l+ getPrimitiveManager()\l+ getTrimeshPrimitiveManager()\l+ calculateLocalInertia()\l+ getName()\l+ getGImpactShapeType()\l+ needsRetrieveTriangles()\l+ needsRetrieveTetrahedrons()\l+ getBulletTriangle()\l+ getBulletTetrahedron()\l+ getVertexCount()\l+ getVertex()\l+ setMargin()\l+ getMargin()\l+ setLocalScaling()\l+ getLocalScaling()\l+ getPart()\l+ processAllTriangles()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{btGImpactShapeInterface\n|# m_localAABB\l# m_needs_update\l# localScaling\l# m_box_set\l|+ btGImpactShapeInterface()\l+ updateBound()\l+ getAabb()\l+ postUpdate()\l+ getLocalBox()\l+ getShapeType()\l+ setLocalScaling()\l+ getLocalScaling()\l+ setMargin()\l+ rayTest()\l+ processAllTriangles()\l+ getGImpactShapeType()\l+ getBoxSet()\l+ hasBoxSet()\l+ getPrimitiveManager()\l+ getNumChildShapes()\l+ childrenHasTransform()\l+ needsRetrieveTriangles()\l+ needsRetrieveTetrahedrons()\l+ getBulletTriangle()\l+ getBulletTetrahedron()\l+ lockChildShapes()\l+ unlockChildShapes()\l+ getPrimitiveTriangle()\l+ getChildAabb()\l+ getChildShape()\l+ getChildShape()\l+ getChildTransform()\l+ setChildTransform()\l# calcLocalAABB()\l* getGImpactShapeType()\l* getBoxSet()\l* hasBoxSet()\l* getPrimitiveManager()\l* getNumChildShapes()\l* childrenHasTransform()\l* needsRetrieveTriangles()\l* needsRetrieveTetrahedrons()\l* getBulletTriangle()\l* getBulletTetrahedron()\l* lockChildShapes()\l* unlockChildShapes()\l* getPrimitiveTriangle()\l* getChildAabb()\l* getChildShape()\l* getChildShape()\l* getChildTransform()\l* setChildTransform()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d18/classbtGImpactShapeInterface.html",tooltip="Base class for gimpact shapes."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{btConcaveShape\n|# m_collisionMargin\l|+ btConcaveShape()\l+ ~btConcaveShape()\l+ processAllTriangles()\l+ getMargin()\l+ setMargin()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/da0/classbtConcaveShape.html"];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{btCollisionShape\n|# m_shapeType\l# m_userPointer\l|+ btCollisionShape()\l+ ~btCollisionShape()\l+ getAabb()\l+ getBoundingSphere()\l+ getAngularMotionDisc()\l+ getContactBreakingThreshold()\l+ calculateTemporalAabb()\l+ isPolyhedral()\l+ isConvex2d()\l+ isConvex()\l+ isNonMoving()\l+ isConcave()\l+ isCompound()\l+ isSoftBody()\l+ isInfinite()\l+ setLocalScaling()\l+ getLocalScaling()\l+ calculateLocalInertia()\l+ getName()\l+ getShapeType()\l+ setMargin()\l+ getMargin()\l+ setUserPointer()\l+ getUserPointer()\l+ calculateSerializeBufferSize()\l+ serialize()\l+ serializeSingleShape()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd7/classbtCollisionShape.html",tooltip="The btCollisionShape class provides an interface for collision shapes that can be shared among btColl..."];
}
