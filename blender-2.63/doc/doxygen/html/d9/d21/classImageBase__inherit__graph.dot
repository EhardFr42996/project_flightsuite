digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ImageBase\n|+ m_exports\l# m_image\l# m_imgSize\l# m_size\l# m_avail\l# m_scale\l# m_scaleChange\l# m_flip\l# m_sources\l# m_staticSources\l# m_pyfilter\l|+ ImageBase()\l+ ~ImageBase()\l+ release()\l+ isImageAvailable()\l+ getImage()\l+ getSize()\l+ getBuffSize()\l+ refresh()\l+ getScale()\l+ setScale()\l+ getFlip()\l+ setFlip()\l+ getSource()\l+ setSource()\l+ getFilter()\l+ setFilter()\l+ calcSize()\l# init()\l# findSource()\l# newSource()\l# checkSourceSizes()\l# calcImage()\l# loopDetect()\l# convImage()\l# filterImage()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{ImageBuff\n|- m_imbuf\l|+ ImageBuff()\l+ ~ImageBuff()\l+ load()\l+ clear()\l+ plot()\l+ plot()\l+ refresh()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d05/classImageBuff.html",tooltip="class for image buffer"];
  Node1 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{ImageMix\n||+ ImageMix()\l+ ~ImageMix()\l+ getWeight()\l+ setWeight()\l# newSource()\l# calcImage()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/de6/classImageMix.html",tooltip="class for image mixer"];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{ImageViewport\n|# m_viewport\l# m_capSize\l# m_whole\l# m_alpha\l# m_position\l# m_upLeft\l# m_viewportImage\l# m_texInit\l|+ ImageViewport()\l+ ~ImageViewport()\l+ getWhole()\l+ setWhole()\l+ getAlpha()\l+ setAlpha()\l+ getCaptureSize()\l+ setCaptureSize()\l+ getPosition()\l+ setPosition()\l# calcImage()\l# getViewportSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbb/classImageViewport.html",tooltip="class for viewport access"];
  Node4 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{ImageRender\n|# m_render\l# m_scene\l# m_camera\l# m_owncamera\l# m_observer\l# m_mirror\l# m_clip\l# m_mirrorHalfWidth\l# m_mirrorHalfHeight\l# m_mirrorPos\l# m_mirrorZ\l# m_mirrorY\l# m_mirrorX\l# m_canvas\l# m_rasterizer\l# m_rendertools\l# m_engine\l# m_background\l|+ ImageRender()\l+ ImageRender()\l+ ~ImageRender()\l+ getBackground()\l+ setBackground()\l+ getClip()\l+ setClip()\l# calcImage()\l# Render()\l# SetupRenderFrame()\l# RenderFrame()\l# SetBackGround()\l# SetWorldSettings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d39/classImageRender.html",tooltip="class for render 3d scene"];
  Node1 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{VideoBase\n|# m_format\l# m_orgSize\l# m_status\l# m_isFile\l# m_range\l# m_repeat\l# m_frameRate\l|+ VideoBase()\l+ ~VideoBase()\l+ openFile()\l+ openCam()\l+ play()\l+ pause()\l+ stop()\l+ getStatus()\l+ getRange()\l+ setRange()\l+ getRepeat()\l+ setRepeat()\l+ getFrameRate()\l+ setFrameRate()\l# init()\l# process()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d6c/classVideoBase.html",tooltip="base class for video source"];
}
