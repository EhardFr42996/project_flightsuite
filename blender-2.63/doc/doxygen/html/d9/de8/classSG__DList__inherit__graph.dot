digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{SG_DList\n|# m_flink\l# m_blink\l|+ SG_DList()\l+ SG_DList()\l+ ~SG_DList()\l+ Empty()\l+ AddBack()\l+ AddFront()\l+ Remove()\l+ Delink()\l+ Peek()\l+ Back()\l+ Self()\l+ Peek()\l+ Back()\l+ Self()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{SG_DListHead\< T \>\n||+ SG_DListHead()\l+ SG_DListHead()\l+ ~SG_DListHead()\l+ Remove()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dab/classSG__DListHead.html"];
  Node2 -> Node3 [dir=back,color="orange",fontsize="10",style="dashed",label="\< BL_ArmatureConstraint \>",fontname="Helvetica"];
  Node3 [label="{SG_DListHead\< BL_ArmatureConstraint \>\n||+ SG_DListHead()\l+ SG_DListHead()\l+ ~SG_DListHead()\l+ Remove()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dab/classSG__DListHead.html"];
  Node1 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{SG_QList\n|# m_fqlink\l# m_bqlink\l|+ SG_QList()\l+ SG_QList()\l+ ~SG_QList()\l+ QEmpty()\l+ QAddBack()\l+ QAddFront()\l+ QRemove()\l+ QDelink()\l+ QPeek()\l+ QBack()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d05/classSG__QList.html"];
  Node4 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{PyObjectPlus\n|+ m_ignore_deprecation_warnings\l|+ PyObjectPlus()\l+ ~PyObjectPlus()\l+ InvalidateProxy()\l+ ProcessReplica()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/dbc/classPyObjectPlus.html"];
  Node5 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{BL_ArmatureBone\n|- Py_HeaderPtr\l|- BL_ArmatureBone()\l- ~BL_ArmatureBone()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/dd9/classBL__ArmatureBone.html"];
  Node5 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{BL_ArmatureChannel\n|- Py_HeaderPtr\l- m_posechannel\l- m_armature\l|+ BL_ArmatureChannel()\l+ ~BL_ArmatureChannel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d10/classBL__ArmatureChannel.html"];
  Node5 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{BL_ArmatureConstraint\n|- m_constraint\l- m_posechannel\l- m_armature\l- m_name\l- m_target\l- m_subtarget\l- m_blendtarget\l- m_blendsubtarget\l- m_blendmat\l- m_blendsubmat\l- m_pose\l- m_subpose\l|+ BL_ArmatureConstraint()\l+ ~BL_ArmatureConstraint()\l+ GetReplica()\l+ ReParent()\l+ Relink()\l+ UnlinkObject()\l+ UpdateTarget()\l+ RestoreTarget()\l+ Match()\l+ GetName()\l+ SetConstraintFlag()\l+ ClrConstraintFlag()\l+ SetWeight()\l+ SetInfluence()\l+ SetTarget()\l+ SetSubtarget()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/da8/classBL__ArmatureConstraint.html"];
  Node5 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 [label="{BL_Shader\n|- mShader\l- mPass\l- mOk\l- mUse\l- mAttr\l- vertProg\l- fragProg\l- mError\l- mDirty\l- mUniforms\l- mPreDef\l|+ BL_Shader()\l+ ~BL_Shader()\l+ GetVertPtr()\l+ GetFragPtr()\l+ SetVertPtr()\l+ SetFragPtr()\l+ getNumPass()\l+ GetError()\l+ SetSampler()\l+ Ok()\l+ GetProg()\l+ SetProg()\l+ GetAttribute()\l+ ApplyShader()\l+ UnloadShader()\l+ Update()\l+ SetUniformfv()\l+ SetUniformiv()\l+ GetAttribLocation()\l+ BindAttribute()\l+ GetUniformLocation()\l+ SetUniform()\l+ SetUniform()\l+ SetUniform()\l+ SetUniform()\l+ SetUniform()\l+ SetUniform()\l+ SetUniform()\l+ SetUniform()\l+ SetUniform()\l+ SetUniform()\l- LinkProgram()\l- FindUniform()\l- ClearUniforms()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/da0/classBL__Shader.html"];
  Node5 -> Node10 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 [label="{CValue\n|- m_pNamedPropertyArray\l- m_ValFlags\l- m_refcount\l- m_sZeroVec\l|+ CValue()\l+ Calc()\l+ CalcFinal()\l+ SetOwnerExpression()\l+ Execute()\l+ GetRefCount()\l+ AddRef()\l+ Release()\l+ SetProperty()\l+ SetProperty()\l+ GetProperty()\l+ GetProperty()\l+ GetPropertyText()\l+ GetPropertyNumber()\l+ RemoveProperty()\l+ GetPropertyNames()\l+ ClearProperties()\l+ SetPropertiesModified()\l+ IsAnyPropertyModified()\l+ GetProperty()\l+ GetPropertyCount()\l+ FindIdentifier()\l+ SetColorOperator()\l+ GetText()\l+ GetNumber()\l+ ZeroVector()\l+ GetVector3()\l+ GetName()\l+ SetName()\l+ SetValue()\l+ GetReplica()\l+ ProcessReplica()\l+ op2str()\l+ SetSelected()\l+ SetModified()\l+ SetAffected()\l+ SetReleaseRequested()\l+ SetError()\l+ SetVisible()\l+ IsModified()\l+ IsError()\l+ IsAffected()\l+ IsSelected()\l+ IsReleaseRequested()\l+ IsVisible()\l+ SetCustomFlag1()\l+ IsCustomFlag1()\l+ SetCustomFlag2()\l+ IsCustomFlag2()\l# DisableRefCount()\l# ~CValue()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d9c/classCValue.html"];
  Node10 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 [label="{CPropValue\n|# m_strNewName\l|+ CPropValue()\l+ ~CPropValue()\l+ SetName()\l+ GetName()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/dd4/classCPropValue.html"];
  Node11 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 [label="{CBoolValue\n|+ sTrueString\l+ sFalseString\l- m_bool\l|+ CBoolValue()\l+ CBoolValue()\l+ CBoolValue()\l+ GetText()\l+ GetNumber()\l+ GetBool()\l+ SetValue()\l+ Calc()\l+ CalcFinal()\l+ Configure()\l+ GetReplica()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/de8/classCBoolValue.html"];
  Node11 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node13 [label="{CEmptyValue\n||+ CEmptyValue()\l+ ~CEmptyValue()\l+ GetText()\l+ GetNumber()\l+ GetPolySoup()\l+ GetVector3()\l+ IsInside()\l+ Calc()\l+ CalcFinal()\l+ GetReplica()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d1a/classCEmptyValue.html"];
  Node11 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 [label="{CErrorValue\n|- m_strErrorText\l|+ GetText()\l+ GetNumber()\l+ CErrorValue()\l+ CErrorValue()\l+ ~CErrorValue()\l+ Calc()\l+ CalcFinal()\l+ GetReplica()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d14/classCErrorValue.html"];
  Node11 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 [label="{CFloatValue\n|# m_float\l# m_pstrRep\l|+ CFloatValue()\l+ CFloatValue()\l+ CFloatValue()\l+ GetText()\l+ Configure()\l+ GetNumber()\l+ SetValue()\l+ GetFloat()\l+ SetFloat()\l+ ~CFloatValue()\l+ GetReplica()\l+ Calc()\l+ CalcFinal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d4c/classCFloatValue.html"];
  Node11 -> Node16 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 [label="{CIntValue\n|- m_int\l- m_pstrRep\l|+ GetText()\l+ GetNumber()\l+ GetInt()\l+ CIntValue()\l+ CIntValue()\l+ CIntValue()\l+ Calc()\l+ CalcFinal()\l+ SetValue()\l+ Configure()\l+ AddConfigurationData()\l+ GetReplica()\l# ~CIntValue()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d1e/classCIntValue.html"];
  Node11 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 [label="{CListValue\n|- m_pValueArray\l- m_bReleaseContents\l|+ CListValue()\l+ ~CListValue()\l+ AddConfigurationData()\l+ Configure()\l+ Add()\l+ Calc()\l+ CalcFinal()\l+ GetNumber()\l+ GetReplica()\l+ MergeList()\l+ RemoveValue()\l+ SetReleaseOnDestruct()\l+ SearchValue()\l+ FindValue()\l+ FindValue()\l+ ReleaseAndRemoveAll()\l+ SetModified()\l+ IsModified()\l+ Remove()\l+ Resize()\l+ SetValue()\l+ GetValue()\l+ GetCount()\l+ GetText()\l+ CheckEqual()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/de7/classCListValue.html"];
  Node11 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node18 [label="{CStringValue\n|- m_strString\l|+ CStringValue()\l+ CStringValue()\l+ ~CStringValue()\l+ IsEqual()\l+ GetText()\l+ GetNumber()\l+ Calc()\l+ CalcFinal()\l+ SetValue()\l+ GetReplica()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dc0/classCStringValue.html"];
  Node11 -> Node19 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 [label="{CVectorValue\n|# m_vec\l# m_transformedvec\l|+ SetValue()\l+ SetVector()\l+ Configure()\l+ GetVector3()\l+ GetNumber()\l+ Calc()\l+ CalcFinal()\l+ CVectorValue()\l+ CVectorValue()\l+ CVectorValue()\l+ CVectorValue()\l+ ~CVectorValue()\l+ AddConfigurationData()\l+ GetReplica()\l+ GetText()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d33/classCVectorValue.html"];
  Node11 -> Node20 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node20 [label="{CVoidValue\n|+ m_bDeleteOnDestruct\l+ m_pAnything\l|+ CVoidValue()\l+ CVoidValue()\l+ ~CVoidValue()\l+ GetText()\l+ GetNumber()\l+ Calc()\l+ CalcFinal()\l+ GetReplica()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/df7/classCVoidValue.html"];
  Node10 -> Node21 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node21 [label="{SCA_ILogicBrick\n|+ m_sCurrentLogicManager\l# m_gameobj\l# m_Execute_Priority\l# m_Execute_Ueber_Priority\l# m_bActive\l# m_eventval\l# m_text\l# m_name\l|+ SCA_ILogicBrick()\l+ ~SCA_ILogicBrick()\l+ SetExecutePriority()\l+ SetUeberExecutePriority()\l+ GetParent()\l+ ReParent()\l+ Relink()\l+ Delete()\l+ Calc()\l+ CalcFinal()\l+ GetText()\l+ GetNumber()\l+ GetName()\l+ SetName()\l+ IsActive()\l+ SetActive()\l+ InsertActiveQList()\l+ InsertSelfActiveQList()\l+ LessComparedTo()\l+ Replace_IScene()\l+ Replace_NetworkScene()\l# RegisterEvent()\l# RemoveEvent()\l# GetEvent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d9f/classSCA__ILogicBrick.html"];
  Node21 -> Node22 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node22 [label="{SCA_IActuator\n|# m_type\l# m_links\l# m_posevent\l# m_negevent\l# m_linkedcontrollers\l|+ SCA_IActuator()\l+ UnlinkObject()\l+ Update()\l+ Update()\l+ AddEvent()\l+ ProcessReplica()\l+ IsNegativeEvent()\l+ ~SCA_IActuator()\l+ Deactivate()\l+ Activate()\l+ LinkToController()\l+ UnlinkController()\l+ UnlinkAllControllers()\l+ ClrLink()\l+ IncLink()\l+ DecLink()\l+ IsNoLink()\l+ IsType()\l# RemoveAllEvents()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$d5/d8b/classSCA__IActuator.html"];
  Node22 -> Node23 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node23 [label="{BL_ActionActuator\n|# m_lastpos\l# m_blendframe\l# m_flag\l# m_startframe\l# m_endframe\l# m_starttime\l# m_localtime\l# m_lastUpdate\l# m_blendin\l# m_blendstart\l# m_stridelength\l# m_layer_weight\l# m_playtype\l# m_priority\l# m_layer\l# m_ipo_flags\l# m_pose\l# m_blendpose\l# m_userpose\l# m_action\l# m_propname\l# m_framepropname\l|+ BL_ActionActuator()\l+ ~BL_ActionActuator()\l+ Update()\l+ GetReplica()\l+ ProcessReplica()\l+ SetBlendTime()\l+ SetLocalTime()\l+ ResetStartTime()\l+ GetAction()\l+ SetAction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d1a/classBL__ActionActuator.html"];
  Node22 -> Node24 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node24 [label="{BL_ArmatureActuator\n|- m_constraint\l- m_gametarget\l- m_gamesubtarget\l- m_posechannel\l- m_constraintname\l- m_weight\l- m_influence\l- m_type\l|+ BL_ArmatureActuator()\l+ ~BL_ArmatureActuator()\l+ GetReplica()\l+ ProcessReplica()\l+ UnlinkObject()\l+ Relink()\l+ Update()\l+ ReParent()\l- FindConstraint()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d4b/classBL__ArmatureActuator.html"];
  Node22 -> Node25 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node25 [label="{BL_ShapeActionActuator\n|# m_lastpos\l# m_blendframe\l# m_flag\l# m_startframe\l# m_endframe\l# m_starttime\l# m_localtime\l# m_lastUpdate\l# m_blendin\l# m_blendstart\l# m_stridelength\l# m_playtype\l# m_priority\l# m_action\l# m_framepropname\l# m_propname\l# m_blendshape\l# m_idptr\l|+ BL_ShapeActionActuator()\l+ ~BL_ShapeActionActuator()\l+ Update()\l+ GetReplica()\l+ ProcessReplica()\l+ SetBlendTime()\l+ BlendShape()\l+ GetAction()\l+ SetAction()\l# SetStartTime()\l# SetLocalTime()\l# ClampLocalTime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/df4/classBL__ShapeActionActuator.html"];
  Node22 -> Node26 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node26 [label="{KX_CameraActuator\n|+ X_AXIS_STRING\l+ Y_AXIS_STRING\l- m_ob\l- m_height\l- m_minHeight\l- m_maxHeight\l- m_axis\l- m_damping\l|+ KX_CameraActuator()\l+ ~KX_CameraActuator()\l+ GetReplica()\l+ ProcessReplica()\l+ Update()\l+ UnlinkObject()\l+ Relink()\l- findObject()\l- string2axischoice()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dab/classKX__CameraActuator.html"];
  Node22 -> Node27 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node27 [label="{KX_ConstraintActuator\n|# m_posDampTime\l# m_rotDampTime\l# m_minimumBound\l# m_maximumBound\l# m_minimumSine\l# m_maximumSine\l# m_refDirection\l# m_refDirVector\l# m_locrot\l# m_activeTime\l# m_currentTime\l# m_option\l# m_property\l# m_hitObject\l|+ IsValidMode()\l+ RayHit()\l+ NeedRayCast()\l+ KX_ConstraintActuator()\l+ ~KX_ConstraintActuator()\l+ GetReplica()\l+ Update()\l+ pyattr_check_direction()\l+ pyattr_check_min()\l# Clamp()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d95/classKX__ConstraintActuator.html"];
  Node22 -> Node28 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node28 [label="{KX_GameActuator\n|# m_mode\l# m_restart\l# m_filename\l# m_loadinganimationname\l# m_scene\l# m_ketsjiengine\l|+ KX_GameActuator()\l+ ~KX_GameActuator()\l+ GetReplica()\l+ Update()\l+ Replace_IScene()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d3b/classKX__GameActuator.html"];
  Node22 -> Node29 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node29 [label="{KX_IpoActuator\n|+ m_type\l+ S_KX_ACT_IPO_PLAY_STRING\l+ S_KX_ACT_IPO_PINGPONG_STRING\l+ S_KX_ACT_IPO_FLIPPER_STRING\l+ S_KX_ACT_IPO_LOOPSTOP_STRING\l+ S_KX_ACT_IPO_LOOPEND_STRING\l+ S_KX_ACT_IPO_KEY2KEY_STRING\l+ S_KX_ACT_IPO_FROM_PROP_STRING\l# m_bNegativeEvent\l# m_startframe\l# m_endframe\l# m_recurse\l# m_localtime\l# m_starttime\l# m_direction\l# m_propname\l# m_framepropname\l# m_ipo_as_force\l# m_ipo_add\l# m_ipo_local\l# m_bIpoPlaying\l|+ string2mode()\l+ KX_IpoActuator()\l+ ~KX_IpoActuator()\l+ GetReplica()\l+ SetStart()\l+ SetEnd()\l+ Update()\l# ResetStartTime()\l- SetStartTime()\l- SetLocalTime()\l- ClampLocalTime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d6a/classKX__IpoActuator.html"];
  Node22 -> Node30 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node30 [label="{KX_NetworkMessageActuator\n|- m_lastEvent\l- m_networkscene\l- m_toPropName\l- m_subject\l- m_bPropBody\l- m_body\l|+ KX_NetworkMessageActuator()\l+ ~KX_NetworkMessageActuator()\l+ Update()\l+ GetReplica()\l+ Replace_NetworkScene()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/de4/classKX__NetworkMessageActuator.html"];
  Node22 -> Node31 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node31 [label="{KX_ObjectActuator\n|- m_force\l- m_torque\l- m_dloc\l- m_drot\l- m_linear_velocity\l- m_angular_velocity\l- m_pid\l- m_linear_length2\l- m_angular_length2\l- m_current_linear_factor\l- m_current_angular_factor\l- m_damping\l- m_previous_error\l- m_error_accumulator\l- m_bitLocalFlag\l- m_reference\l- m_active_combined_velocity\l- m_linear_damping_active\l- m_angular_damping_active\l|+ isValid()\l+ KX_ObjectActuator()\l+ ~KX_ObjectActuator()\l+ GetReplica()\l+ ProcessReplica()\l+ UnlinkObject()\l+ Relink()\l+ SetForceLoc()\l+ UpdateFuzzyFlags()\l+ Update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d5d/classKX__ObjectActuator.html"];
  Node22 -> Node32 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node32 [label="{KX_ParentActuator\n|- m_mode\l- m_addToCompound\l- m_ghost\l- m_ob\l|+ KX_ParentActuator()\l+ ~KX_ParentActuator()\l+ Update()\l+ GetReplica()\l+ ProcessReplica()\l+ Relink()\l+ UnlinkObject()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d21/classKX__ParentActuator.html"];
  Node22 -> Node33 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node33 [label="{KX_SCA_AddObjectActuator\n|- m_timeProp\l- m_OriginalObject\l- m_scene\l- m_linear_velocity\l- m_localLinvFlag\l- m_angular_velocity\l- m_localAngvFlag\l- m_lastCreatedObject\l|+ KX_SCA_AddObjectActuator()\l+ ~KX_SCA_AddObjectActuator()\l+ GetReplica()\l+ ProcessReplica()\l+ Replace_IScene()\l+ UnlinkObject()\l+ Relink()\l+ Update()\l+ GetLastCreatedObject()\l+ InstantAddObject()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dcd/classKX__SCA__AddObjectActuator.html"];
  Node21 -> Node34 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node34 [label="{SCA_IController\n|# m_linkedsensors\l# m_linkedactuators\l# m_statemask\l# m_justActivated\l# m_bookmark\l|+ SCA_IController()\l+ ~SCA_IController()\l+ Trigger()\l+ LinkToSensor()\l+ LinkToActuator()\l+ GetLinkedSensors()\l+ GetLinkedActuators()\l+ ReserveActuator()\l+ UnlinkAllSensors()\l+ UnlinkAllActuators()\l+ UnlinkActuator()\l+ UnlinkSensor()\l+ SetState()\l+ ApplyState()\l+ Deactivate()\l+ IsJustActivated()\l+ ClrJustActivated()\l+ SetBookmark()\l+ Activate()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$d9/d74/classSCA__IController.html"];
  Node21 -> Node35 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node35 [label="{SCA_ISensor\n|# m_eventmgr\l# m_pos_pulsemode\l# m_neg_pulsemode\l# m_pulse_frequency\l# m_pos_ticks\l# m_neg_ticks\l# m_invert\l# m_level\l# m_tap\l# m_reset\l# m_suspended\l# m_links\l# m_state\l# m_prev_state\l# m_linkedcontrollers\l|+ SCA_ISensor()\l+ ~SCA_ISensor()\l+ ReParent()\l+ Activate()\l+ Evaluate()\l+ IsPositiveTrigger()\l+ Init()\l+ GetReplica()\l+ SetPulseMode()\l+ SetInvert()\l+ SetLevel()\l+ SetTap()\l+ RegisterToManager()\l+ UnregisterToManager()\l+ Replace_EventManager()\l+ ReserveController()\l+ LinkToController()\l+ UnlinkController()\l+ UnlinkAllControllers()\l+ ActivateControllers()\l+ ProcessReplica()\l+ GetNumber()\l+ GetSensorType()\l+ Suspend()\l+ IsSuspended()\l+ GetState()\l+ GetPrevState()\l+ GetPosTicks()\l+ GetNegTicks()\l+ Resume()\l+ ClrLink()\l+ IncLink()\l+ DecLink()\l+ IsNoLink()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$dc/d76/classSCA__ISensor.html"];
  Node10 -> Node36 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node36 [label="{SCA_IObject\n|# m_sensors\l# m_controllers\l# m_actuators\l# m_registeredActuators\l# m_registeredObjects\l# m_activeActuators\l# m_activeControllers\l# m_ignore_activity_culling\l# m_suspended\l# m_initState\l# m_state\l# m_firstState\l# m_activeBookmarkedControllers\l# m_sDummy\l|+ SCA_IObject()\l+ ~SCA_IObject()\l+ GetControllers()\l+ GetSensors()\l+ GetActuators()\l+ GetActiveActuators()\l+ AddSensor()\l+ ReserveSensor()\l+ AddController()\l+ ReserveController()\l+ AddActuator()\l+ ReserveActuator()\l+ RegisterActuator()\l+ UnregisterActuator()\l+ RegisterObject()\l+ UnregisterObject()\l+ UnlinkObject()\l+ FindSensor()\l+ FindActuator()\l+ FindController()\l+ SetCurrentTime()\l+ ReParentLogic()\l+ SetIgnoreActivityCulling()\l+ GetIgnoreActivityCulling()\l+ Suspend()\l+ Resume()\l+ SetInitState()\l+ ResetState()\l+ SetState()\l+ GetState()\l+ GetGameObjectType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d68/classSCA__IObject.html"];
  Node36 -> Node37 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node37 [label="{KX_GameObject\n|+ m_isDeformable\l# m_bDyna\l# m_pClient_info\l# m_name\l# m_text\l# m_layer\l# m_meshes\l# m_meshSlots\l# m_pBlenderObject\l# m_pBlenderGroupObject\l# m_bSuspendDynamics\l# m_bUseObjectColor\l# m_bIsNegativeScaling\l# m_objectColor\l# m_bVisible\l# m_bCulled\l# m_bOccluder\l# m_pPhysicsController1\l# m_pGraphicController\l# m_testPropName\l# m_xray\l# m_pHitObject\l# m_pSGNode\l# m_OpenGL_4x4Matrix\l# m_pObstacleSimulation\l# m_actionManager\l|+ Relink()\l+ GetOpenGLMatrix()\l+ GetOpenGLMatrixPtr()\l+ UpdateBlenderObjectMatrix()\l+ GetParent()\l+ SetParent()\l+ RemoveParent()\l+ PlayAction()\l+ GetActionFrame()\l+ SetActionFrame()\l+ GetCurrentAction()\l+ SetPlayMode()\l+ SetTimes()\l+ StopAction()\l+ IsActionDone()\l+ UpdateActionManager()\l+ KX_GameObject()\l+ ~KX_GameObject()\l+ Calc()\l+ CalcFinal()\l+ GetText()\l+ GetNumber()\l+ GetName()\l+ SetName()\l+ GetReplica()\l+ ProcessReplica()\l+ GetLinearVelocity()\l+ GetVelocity()\l+ GetMass()\l+ GetLocalInertia()\l+ GetAngularVelocity()\l+ AlignAxisToVect()\l+ SetObjectColor()\l+ GetObjectColor()\l+ ResolveCombinedVelocities()\l+ GetPhysicsController()\l+ SetPhysicsController()\l+ GetDeformer()\l+ SetDeformer()\l+ GetGraphicController()\l+ SetGraphicController()\l+ ActivateGraphicController()\l+ NodeSetLocalPosition()\l+ NodeSetLocalOrientation()\l+ NodeSetGlobalOrientation()\l+ NodeSetLocalScale()\l+ NodeSetWorldScale()\l+ NodeSetRelativeScale()\l+ NodeSetWorldPosition()\l+ NodeUpdateGS()\l+ NodeGetWorldOrientation()\l+ NodeGetWorldScaling()\l+ NodeGetWorldPosition()\l+ NodeGetLocalOrientation()\l+ NodeGetLocalScaling()\l+ NodeGetLocalPosition()\l+ GetSGNode()\l+ GetSGNode()\l+ GetBlenderObject()\l+ SetBlenderObject()\l+ GetBlenderGroupObject()\l+ SetBlenderGroupObject()\l+ IsDupliGroup()\l+ SetSGNode()\l+ IsDynamic()\l+ IsVertexParent()\l+ RayHit()\l+ NeedRayCast()\l+ ApplyForce()\l+ ApplyTorque()\l+ ApplyRotation()\l+ ApplyMovement()\l+ addLinearVelocity()\l+ setLinearVelocity()\l+ setAngularVelocity()\l+ UpdateTransform()\l+ SynchronizeTransform()\l+ InitIPO()\l+ UpdateIPO()\l+ UpdateMaterialData()\l+ AddMeshUser()\l+ UpdateBuckets()\l+ RemoveMeshes()\l+ AddMesh()\l+ GetMesh()\l+ GetMeshCount()\l+ SetDebugColor()\l+ ResetDebugColor()\l+ GetVisible()\l+ SetVisible()\l+ GetCulled()\l+ SetCulled()\l+ GetOccluder()\l+ SetOccluder()\l+ SetLayer()\l+ GetLayer()\l+ IsNegativeScaling()\l+ Suspend()\l+ Resume()\l+ SuspendDynamics()\l+ RestoreDynamics()\l+ RegisterObstacle()\l+ UnregisterObstacle()\l+ getClientInfo()\l+ GetChildren()\l+ GetChildrenRecursive()\l+ GetClientObject()\l+ UpdateTransformFunc()\l+ SynchronizeTransformFunc()\l# GetActionManager()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$d1/d73/classKX__GameObject.html"];
  Node5 -> Node38 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node38 [label="{KX_BlenderMaterial\n|- mMaterial\l- mShader\l- mBlenderShader\l- mScene\l- mTextures\l- mUserDefBlend\l- mBlendFunc\l- mModified\l- mConstructed\l- mPass\l- mLastBlenderShader\l- mLastShader\l|+ KX_BlenderMaterial()\l+ Initialize()\l+ ~KX_BlenderMaterial()\l+ GetCachingInfo()\l+ Activate()\l+ ActivateMeshSlot()\l+ ActivateMat()\l+ ActivatShaders()\l+ ActivateBlenderShaders()\l+ GetBlenderMaterial()\l+ GetMTFace()\l+ GetMCol()\l+ getTex()\l+ getImage()\l+ getBlendFunc()\l+ UpdateIPO()\l+ Replace_IScene()\l+ OnConstruction()\l+ EndFrame()\l- SetBlenderGLSLShader()\l- ActivatGLMaterials()\l- ActivateTexGen()\l- UsesLighting()\l- GetMaterialRGBAColor()\l- GetBlenderScene()\l- ReleaseMaterial()\l- setTexData()\l- setBlenderShaderData()\l- setShaderData()\l- setObjectMatrixData()\l- setTexMatrixData()\l- setLightData()\l- OnExit()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d90/classKX__BlenderMaterial.html"];
  Node5 -> Node39 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node39 [label="{KX_ConstraintWrapper\n|- m_constraintId\l- m_constraintType\l- m_physenv\l|+ KX_ConstraintWrapper()\l+ ~KX_ConstraintWrapper()\l+ getConstraintId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d74/classKX__ConstraintWrapper.html"];
  Node5 -> Node40 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node40 [label="{KX_PhysicsObjectWrapper\n|- m_ctrl\l- m_physenv\l|+ KX_PhysicsObjectWrapper()\l+ ~KX_PhysicsObjectWrapper()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/da6/classKX__PhysicsObjectWrapper.html"];
  Node5 -> Node41 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node41 [label="{KX_PolygonMaterial\n|- m_tface\l- m_mcol\l- m_material\l- m_pass\l|+ KX_PolygonMaterial()\l+ Initialize()\l+ ~KX_PolygonMaterial()\l+ GetCachingInfo()\l+ DefaultActivate()\l+ Activate()\l+ GetBlenderMaterial()\l+ GetBlenderImage()\l+ GetMTFace()\l+ GetMCol()\l+ GetMaterialRGBAColor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d1f/classKX__PolygonMaterial.html"];
  Node5 -> Node42 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node42 [label="{KX_Scene\n|+ m_callbacks\l# m_bucketmanager\l# m_tempObjectList\l# m_euthanasyobjects\l# m_objectlist\l# m_parentlist\l# m_lightlist\l# m_inactivelist\l# m_animatedlist\l# m_sghead\l# m_cameras\l# m_fonts\l# m_logicmgr\l# m_keyboardmgr\l# m_mousemgr\l# m_timemgr\l# m_sceneConverter\l# m_physicsEnvironment\l# m_isclearingZbuffer\l# m_sceneName\l# m_worldinfo\l# m_networkDeviceInterface\l# m_networkScene\l# m_rootnode\l# m_active_camera\l# m_map_gameobject_to_replica\l# m_logicHierarchicalGameObjects\l# m_groupGameObjects\l# m_kxsystem\l# m_ueberExecutionPriority\l# m_suspend\l# m_activity_box_radius\l# m_activity_culling\l# m_dbvt_culling\l# m_dbvt_occlusion_res\l# m_frame_settings\l# m_viewport\l# m_suspendedtime\l# m_suspendeddelta\l# m_blenderScene\l# m_filtermanager\l# m_obstacleSimulation\l|+ KX_Scene()\l+ ~KX_Scene()\l+ GetBucketManager()\l+ FindBucket()\l+ RenderBuckets()\l+ UpdateParents()\l+ DupliGroupRecurse()\l+ IsObjectInGroup()\l+ AddReplicaObject()\l+ AddNodeReplicaObject()\l+ RemoveNodeDestructObject()\l+ RemoveObject()\l+ DelayedRemoveObject()\l+ NewRemoveObject()\l+ ReplaceMesh()\l+ AddAnimatedObject()\l+ RemoveAnimatedObject()\l+ LogicBeginFrame()\l+ LogicUpdateFrame()\l+ UpdateAnimations()\l+ LogicEndFrame()\l+ GetTempObjectList()\l+ GetObjectList()\l+ GetInactiveList()\l+ GetRootParentList()\l+ GetLightList()\l+ GetLogicManager()\l+ GetTimeEventManager()\l+ GetFonts()\l+ FindFont()\l+ AddFont()\l+ GetCameras()\l+ FindCamera()\l+ FindCamera()\l+ AddCamera()\l+ GetActiveCamera()\l+ SetActiveCamera()\l+ SetCameraOnTop()\l+ SetCanvasDesignWidth()\l+ SetCanvasDesignHeight()\l+ GetCanvasDesignWidth()\l+ GetCanvasDesignHeight()\l+ SetFramingType()\l+ GetFramingType()\l+ SetSceneViewport()\l+ GetSceneViewport()\l+ SetNetworkDeviceInterface()\l+ SetNetworkScene()\l+ SetWorldInfo()\l+ GetWorldInfo()\l+ CalculateVisibleMeshes()\l+ UpdateMeshTransformations()\l+ GetpCamera()\l+ GetNetworkDeviceInterface()\l+ GetNetworkScene()\l+ GetSceneConverter()\l+ ReplicateLogic()\l+ GetName()\l+ Suspend()\l+ Resume()\l+ UpdateObjectActivity()\l+ SetActivityCulling()\l+ SetActivityCullingRadius()\l+ IsSuspended()\l+ IsClearingZBuffer()\l+ EnableZBufferClearing()\l+ SetDbvtCulling()\l+ GetDbvtCulling()\l+ SetDbvtOcclusionRes()\l+ GetDbvtOcclusionRes()\l+ SetSceneConverter()\l+ GetPhysicsEnvironment()\l+ SetPhysicsEnvironment()\l+ SetGravity()\l+ GetAnimationFPS()\l+ SetNodeTree()\l+ Update2DFilter()\l+ Render2DFilters()\l+ GetObstacleSimulation()\l+ setSuspendedTime()\l+ getSuspendedTime()\l+ setSuspendedDelta()\l+ getSuspendedDelta()\l+ GetBlenderScene()\l+ MergeScene()\l+ KX_ScenegraphUpdateFunc()\l+ KX_ScenegraphRescheduleFunc()\l# MarkVisible()\l# MarkSubTreeVisible()\l# MarkVisible()\l# PhysicsCullingCallback()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/da3/classKX__Scene.html"];
  Node5 -> Node43 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node43 [label="{KX_VehicleWrapper\n|- m_motionStates\l- m_vehicle\l- m_physenv\l|+ KX_VehicleWrapper()\l+ ~KX_VehicleWrapper()\l+ getConstraintId()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dd1/classKX__VehicleWrapper.html",tooltip="Python interface to physics vehicles (primarily 4-wheel cars and 2wheel bikes)"];
  Node5 -> Node44 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node44 [label="{SCA_PythonKeyboard\n|- m_keyboard\l|+ SCA_PythonKeyboard()\l+ ~SCA_PythonKeyboard()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d54/classSCA__PythonKeyboard.html"];
  Node5 -> Node45 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node45 [label="{SCA_PythonMouse\n|- m_mouse\l- m_canvas\l|+ SCA_PythonMouse()\l+ ~SCA_PythonMouse()\l+ Show()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/de5/classSCA__PythonMouse.html"];
  Node4 -> Node46 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node46 [label="{RAS_MeshSlot\n|+ m_bucket\l+ m_mesh\l+ m_clientObj\l+ m_pDeformer\l+ m_pDerivedMesh\l+ m_OpenGLMatrix\l+ m_bVisible\l+ m_bCulled\l+ m_bObjectColor\l+ m_RGBAcolor\l+ m_DisplayList\l+ m_bDisplayList\l+ m_joinSlot\l+ m_joinInvTransform\l+ m_joinedSlots\l- m_startarray\l- m_endarray\l- m_startindex\l- m_endindex\l- m_startvertex\l- m_endvertex\l- m_displayArrays\l- m_currentArray\l|+ RAS_MeshSlot()\l+ RAS_MeshSlot()\l+ ~RAS_MeshSlot()\l+ init()\l+ begin()\l+ next()\l+ end()\l+ SetDisplayArray()\l+ CurrentDisplayArray()\l+ SetDeformer()\l+ AddPolygon()\l+ AddVertex()\l+ AddPolygonVertex()\l+ Split()\l+ Join()\l+ Equals()\l+ IsCulled()\l+ SetCulled()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d4a/classRAS__MeshSlot.html"];
  Node4 -> Node47 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node47 [label="{SG_IObject\n|- m_SGclientObject\l- m_SGclientInfo\l- m_callbacks\l- m_SGcontrollers\l|+ ~SG_IObject()\l+ AddSGController()\l+ RemoveSGController()\l+ RemoveAllControllers()\l+ GetSGControllerList()\l+ GetCallBackFunctions()\l+ GetSGClientObject()\l+ GetSGClientObject()\l+ SetSGClientObject()\l+ GetSGClientInfo()\l+ GetSGClientInfo()\l+ SetSGClientInfo()\l+ SetControllerTime()\l+ Destruct()\l# ActivateReplicationCallback()\l# ActivateDestructionCallback()\l# ActivateUpdateTransformCallback()\l# ActivateScheduleUpdateCallback()\l# ActivateRecheduleUpdateCallback()\l# SG_IObject()\l# SG_IObject()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d03/classSG__IObject.html"];
  Node47 -> Node48 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node48 [label="{SG_Spatial\n|# m_localPosition\l# m_localRotation\l# m_localScaling\l# m_worldPosition\l# m_worldRotation\l# m_worldScaling\l# m_parent_relation\l# m_bbox\l# m_radius\l# m_modified\l# m_ogldirty\l|+ ClearModified()\l+ SetModified()\l+ ClearDirty()\l+ SetParentRelation()\l+ GetParentRelation()\l+ RelativeTranslate()\l+ SetLocalPosition()\l+ SetWorldPosition()\l+ RelativeRotate()\l+ SetLocalOrientation()\l+ SetLocalOrientation()\l+ SetWorldOrientation()\l+ RelativeScale()\l+ SetLocalScale()\l+ SetWorldScale()\l+ GetLocalPosition()\l+ GetLocalOrientation()\l+ GetLocalScale()\l+ GetWorldPosition()\l+ GetWorldOrientation()\l+ GetWorldScaling()\l+ SetWorldFromLocalTransform()\l+ GetWorldTransform()\l+ ComputeWorldTransforms()\l+ BBox()\l+ SetBBox()\l+ inside()\l+ getBBox()\l+ getAABBox()\l+ Radius()\l+ SetRadius()\l+ IsModified()\l+ IsDirty()\l# SG_Spatial()\l# SG_Spatial()\l# ~SG_Spatial()\l# UpdateSpatialData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d22/classSG__Spatial.html"];
  Node48 -> Node49 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node49 [label="{SG_Node\n|- m_children\l- m_SGparent\l|+ SG_Node()\l+ SG_Node()\l+ ~SG_Node()\l+ AddChild()\l+ RemoveChild()\l+ IsAncessor()\l+ GetSGChildren()\l+ GetSGChildren()\l+ ClearSGChildren()\l+ GetSGParent()\l+ SetSGParent()\l+ GetRootSGParent()\l+ DisconnectFromParent()\l+ IsVertexParent()\l+ IsSlowParent()\l+ UpdateWorldData()\l+ SetSimulatedTime()\l+ Schedule()\l+ Reschedule()\l+ GetSGReplica()\l+ Destruct()\l+ GetNextScheduled()\l+ GetNextRescheduled()\l- ProcessSGReplica()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d3b/classSG__Node.html"];
}
